name: Release

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  release:
    name: Release
    environment: release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,ppc64le

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Generate distribution sources
        run: make generate-sources

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: --snapshot --rm-dist --timeout 2h
#      - name: Run GoReleaser
#        id: goreleaser
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser-pro
#          version: latest
#          args: release --clean --timeout 2h --nightly --skip-publish
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Argo
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          DOCKER_TAG=${{ fromJSON(steps.goreleaser.outputs.metadata).version }}
          COMMIT_AUTHOR=${{github.actor}}
          COMMIT_LINK=${{github.event.compare}}
          COMMAND="submit --from workflowtemplate/deploy-otlp-gateway-v2 --name otlp-gateway-v2-deploy-${DOCKER_TAG} --parameter dockertag=${DOCKER_TAG} --parameter commit=${GITHUB_SHA} --parameter commit_author=${COMMIT_AUTHOR} --parameter commit_link=${COMMIT_LINK}"
          cat << EOF
          Triggering argo-workflows ci-goreleaser:
          - command="$COMMAND"
          - context="$GITHUB_CONTEXT"
          EOF
          docker run \
          -e ARGO_TOKEN="${{ secrets.ARGO_TOKEN }}" \
          -e ARGO_NAMESPACE="otlp-gateway-v2-cd" \
          -e ADD_CI_LABELS="true" \
          -e COMMAND="${COMMAND}" \
          us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
